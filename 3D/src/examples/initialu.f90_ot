! Initial condition for the ion bulk velocity.
! This file contains the expression used for the initial
! velocity field. You can use temporary real arrays R1-R3
! of size (1:nx,1:ny,ksta:kend) and temporary complex arrays
! C1-C8 of size (nz,ny,ista:iend) to do intermediate
! computations. The variable u0 should control the global
! amplitude of the velocity, and variables vparam0-9 can be
! used to control the amplitudes of individual terms. At the
! end, the three components of the velocity in spectral
! space should be stored in the arrays ux, uy, and uz.

! Orszag-Tang vortex
!      u0 : velocity amplitude
!     kdn : minimum wave number
!     kup : maximum wave number

      IF ( (abs(Lx-Ly).gt.tiny).or.(abs(Lx-Lz).gt.tiny) ) THEN
        IF (myrank.eq.0) &
           PRINT *,'Orszag-Tang initial conditions require Lx=Ly=Lz'
        STOP
      ENDIF
      
      DO i = ista,iend
         DO j = 1,ny
            DO k = 1,nz
               uy(k,j,i) = 0.
            END DO
         END DO
      END DO

      DO k = ksta,kend
         DO j = 1,ny
            DO i = 1,nx

            R1(i,j,k) = 0.
            R2(i,j,k) = 0.

            DO ki = INT(kud),INT(kuu)
               R1(i,j,k) = R1(i,j,k)-2*SIN(2*pi*ki*(real(k,kind=GP)-1)/real(nz,kind=GP))
               R2(i,j,k) = R2(i,j,k)+2*SIN(2*pi*ki*(real(i,kind=GP)-1)/real(nx,kind=GP))
            END DO

            END DO
         END DO
      END DO


      CALL fftp3d_real_to_complex(planrc,R1,ux,MPI_COMM_WORLD)
      CALL fftp3d_real_to_complex(planrc,R2,uz,MPI_COMM_WORLD)
      CALL normalize(ux,uy,uz,u0,1,MPI_COMM_WORLD)

      rmq = 1.0_GP/(real(nx,KIND=GP)*real(ny,KIND=GP)*real(nz,KIND=GP))
!$omp parallel do if (iend-ista.ge.nth) private (j,i)
      DO i = ista,iend
!$omp parallel do if (iend-ista.lt.nth) private (j,i)
         DO j = 1,ny
            DO k = 1,nz
               ux(k,j,i) = rmq*ux(k,j,i)
               uy(k,j,i) = rmq*uy(k,j,i)
               uz(k,j,i) = rmq*uz(k,j,i)
            END DO
         END DO
      END DO
